@using Automaton.App.Authentication.Pages.Login;

<CascadingAuthenticationState>
    <Router 
        AppAssembly="@this.GetType().Assembly"
            AdditionalAssemblies="new[] { typeof(LoginPage).Assembly }"
            PreferExactMatches="@true">

        <Found Context="routeData">
            <AuthorizeRouteView RouteData="@routeData" DefaultLayout="typeof(MainLayout)">
                <NotAuthorized>
                    @if (context.User.Identity?.IsAuthenticated != true)
                    {
                        <RedirectToLogin />
                    }
                    else
                    {
                        <p role="alert">You are not authorized to access this resource.</p>
                    }
                </NotAuthorized>
            </AuthorizeRouteView>
        </Found>

        <NotFound>
            <LayoutView Layout="@typeof(MiscellaneousLayout)">
                <CustomNotFound />
            </LayoutView>
        </NotFound>
    </Router>
</CascadingAuthenticationState>

@*To display the pop-up component dynamically, we need to add the <AntContainer /> component in App.razor*@
@*https://github.com/ant-design-blazor/ant-design-blazor*@
<AntContainer />
