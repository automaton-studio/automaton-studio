@using Automaton.Studio.Resources
@using Blazored.FluentValidation;
@using Automaton.Core.Enums;
@inherits FeedbackComponent<VariableModel>

<Form Model="@model"
      LabelColSpan="4"
      WrapperColSpan="20">
    <Validator>
        <FluentValidationValidator @ref="validator" />
        <ValidationSummary />
    </Validator>

    <ChildContent>
        <FormItem Label="Name">
            <Input @bind-Value="@context.Name" Placeholder=@Placeholders.EnterVariableName />
        </FormItem>
        <FormItem Label="Type">
            <Select @bind-Value="context.Type"
                    Placeholder="Select type..."
                    TItemValue="VariableType"
                    TItem="VariableType">
                <SelectOptions>
                    @foreach (var variableType in VariableTypes)
                    {
                        <SelectOption TItemValue="VariableType" TItem="VariableType" Value=@variableType Label=@variableType.ToString() />
                    }
                </SelectOptions>
            </Select>
        </FormItem>
@*        <FormItem Label="Value">
            <Input Type="Input.Text" TValue="string" Value="context.Value?.ToString()" OnChange="(x) => { context.Value = x; }" Placeholder=@Placeholders.EnterVariableValue />
        </FormItem>
*@        <FormItem Label="Description">
            <Input @bind-Value="@context.Description" Placeholder=@Placeholders.EnterDescription />
        </FormItem>
    </ChildContent>
</Form>