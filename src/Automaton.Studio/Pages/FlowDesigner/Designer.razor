@using Automaton.Studio.Domain;
@using System.Text
@using Automaton.Studio.Steps.Sequence

<div class="@GetClassesForDropzone()"
     @ondragover:preventDefault
     @ondragover="()=>{}"
     @ondragenter:preventDefault
     @ondragenter="()=>{}"
     @ondrop="()=>OnDrop()"
     @onmousedown="()=>OnDropzoneMouseDown()"
     @onclick="()=>OnDropzoneClick()"
     @ondrop:preventDefault
     @ondrop:stopPropagation
     @ondragenter:stopPropagation
     @ondragend:stopPropagation
     @ondragover:stopPropagation
     @ondragleave:stopPropagation
     @ondragstart:stopPropagation
     ondragstart="event.dataTransfer.setData('text', event.target.id);">

    <div>
        <GridRow Wrap="false" Justify="center" Align="middle">
            <GridCol Flex=@("50px")></GridCol>
            <GridCol Flex=@("auto")>
                <div @ondrop="()=>OnDrop()"
                     @ondrop:stopPropagation
                     @ondragleave="()=>OnSpacerDragLeave()"
                     @ondragenter="()=>OnSpacerDragEnter()"
                     class="@GetSpacerClass(null)">
                </div>
            </GridCol>

        </GridRow>
        @{
            foreach (var step in Steps)
            {       
                <GridRow Wrap="false" Justify="center" Align="middle">

                    <GridCol Flex=@("50px")>                      
                        <DesignerLine Step="step" Line="@GetVisibleStepIndex(step)"></DesignerLine>
                    </GridCol>

                    <GridCol Flex=@("auto")>

                        <div id="@step.Id" 
                             draggable="@IsStepDragable(step)"
                             @ondragstart="()=>OnStepDragStart(step)"
                             @ondragend="()=>OnStepDragEnd()"
                             @ondragenter="()=>OnStepDragEnter(step)"
                             @ondragover="(x)=>OnStepDragOver(x, step)"
                             @ondragleave="()=>OnStepDragLeave()"
                             @ondrop="()=>OnDrop()"
                             @onclick="()=>OnStepClick(step)"
                             @ondblclick="()=>OnStepDoubleClick(step)"
                             @ondblclick:stopPropagation="true"
                             @onmousedown="()=>OnStepMouseDown(step)"
                             @onmousedown:stopPropagation="true"
                             class="step-container  
                             @GetDraggableClass(step)
                             @GetDragOperationClass()
                             @GetNoDragableClass(step) 
                             @GetStepVisibilityClass(step)">

                                @ChildContent(step)

                                <div @ondrop="()=>OnDrop()"
                                    @ondrop:stopPropagation
                                    @ondragleave="()=>OnSpacerDragLeave()"
                                    @ondragenter="()=>OnSpacerDragEnter(step)"
                                    class="@GetSpacerClass(step) @GetStepVisibilityClass(step)">
                                </div>
                        </div>                
                
                    </GridCol>

               </GridRow>
            }
        }
    </div>
</div>

<style>

    .dropzone {
        overflow: auto;
        height: calc(100vh - 115px);
    }

    .step-active-spacing {
        height: 15px;
        min-height: 15px;
        background-color: deepskyblue;
    }

    .step-spacing {
        height: 15px;
        min-height: 15px;
    }

    .step-invisible {
        display: none;
    }

    .step-spacing {
        height: 15px;
        min-height: 15px;
    }

    .step-container {
        border-left: 1px solid #EEE;
    }

</style>