@using Blazored.FluentValidation;
@using Automaton.Studio.Domain;
@inherits FeedbackComponent<InputVariableModel>

<Form @ref="form"
      Model="@inputVariable"
      LabelColSpan="4"
      WrapperColSpan="20">
    <Validator>
        <FluentValidationValidator @ref="fluentValidationValidator" />
        @*We don't need a validation summary here because all validation is related to the Name field*@
        @*<ValidationSummary />*@
    </Validator>

    <ChildContent>
        <FormItem Label="Name">
            <Input @bind-Value="@context.Name" Placeholder="Enter variable name" />
        </FormItem>

        <FormItem Label="Type">
            <Select @bind-Value="context.Type"
                    Placeholder="Select type..."
                    TItemValue="string"
                    TItem="string">
                <SelectOptions>
                    @foreach (var item in context.Types)
                    {
                        <SelectOption TItemValue="string" TItem="string" Value=@item Label=@item />
                    }
                </SelectOptions>
            </Select>
        </FormItem>

        <FormItem Label="Description">
            <Input @bind-Value="@context.Description" Placeholder="Enter variable description" />
        </FormItem>

    </ChildContent>
</Form>