@using Automaton.Studio.Domain;
@using System.Text
@using Automaton.Studio.Steps.Sequence
@implements IDisposable

<div class="@GetClassesForDropzone()"
     @ondragover:preventDefault
     @ondragover="()=>{}"
     @ondragenter:preventDefault
     @ondragenter="()=>{}"
     @ondrop="()=>OnDropzoneDrop()"
     @onmousedown="()=>OnDropzoneMouseDown()"
     @onclick="()=>OnDropzoneClick()"
     @ondrop:preventDefault
     @ondrop:stopPropagation
     @ondragenter:stopPropagation
     @ondragend:stopPropagation
     @ondragover:stopPropagation
     @ondragleave:stopPropagation
     @ondragstart:stopPropagation
     ondragstart="event.dataTransfer.setData('text', event.target.id);">

    <div @ondrop="()=>OnSpacerDrop()"
         @ondrop:stopPropagation
         @ondragleave="()=>OnSpacerDragLeave()"
         @ondragenter="()=>OnSpacerDragEnter()"
         class="@GetSpacerClass(null)">
    </div>

    @{
        foreach (var item in Steps)
        {
            if (item is SequenceEndStep)
            {
                DecreaseStepMargin();
            }

            if(item.IsVisible())
            {
                <div id="@item.Id" draggable="@IsStepDragable(item)"
                 @ondragstart="()=>OnStepDragStart(item)"
                 @ondragend="()=>OnStepDragEnd()"
                 @ondragenter="()=>OnStepDragEnter(item)"
                 @ondragover="(x)=>OnStepDragOver(x, item)"
                 @ondragleave="()=>OnStepDragLeave()"
                 @ondrop="()=>OnSpacerDrop()"
                 @onclick="()=>OnStepClick(item)"
                 @ondblclick="()=>OnStepDoubleClick(item)"
                 @ondblclick:stopPropagation="true"
                 @onmousedown="()=>OnStepMouseDown(item)"
                 @onmousedown:stopPropagation="true"
                class="@GetClassesForDraggable(item)
                @CheckIfDragOperationIsInProgess()
                @CheckIfDraggable(item)"
                style="margin-left: @GetStepMargin()">

                    @ChildContent(item)

                </div>

                <div @ondrop="()=>OnSpacerDrop()"
                     @ondrop:stopPropagation
                     @ondragleave="()=>OnSpacerDragLeave()"
                     @ondragenter="()=>OnSpacerDragEnter(item)"
                    class="@GetSpacerClass(item)">
                </div>
            }        

            if (item is SequenceStep)
            {
                IncreaseStepMargin();
            }
        }
    }

</div>

<style>

    .dropzone {
        overflow: auto;
        height: calc(100vh - 115px);
    }

    .step-active-spacing {
        height: 15px;
        min-height: 15px;
        background-color: deepskyblue;
    }

    .step-spacing {
        height: 15px;
        min-height: 15px;
    }

</style>