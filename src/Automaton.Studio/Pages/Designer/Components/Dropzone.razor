@using Automaton.Studio.Domain;
@using System.Text
@using Automaton.Studio.Steps.Sequence
@implements IDisposable

<div class="@GetClassesForDropzone()"
     @ondragover:preventDefault
     @ondragover="()=>{}"
     @ondragenter:preventDefault
     @ondragenter="()=>{}"
     @ondrop="()=>OnDrop()"
     @onmousedown="()=>DropzoneMouseDown()"
     @onclick="()=>DropzoneClick()"
     @ondrop:preventDefault
     @ondrop:stopPropagation
     @ondragenter:stopPropagation
     @ondragend:stopPropagation
     @ondragover:stopPropagation
     @ondragleave:stopPropagation
     @ondragstart:stopPropagation
     ondragstart="event.dataTransfer.setData('text', event.target.id);">

    <div @ondrop="()=>OnDropStepOnSpacing()"
         @ondrop:stopPropagation
         @ondragleave="()=>OnDragLeaveFirstSpacing()"
         @ondragenter="()=>OnDragEnterFirstSpacing()"
         class="@GetStepSpacerClass(null)">
    </div>

    @{
        var isInsideSequence = false;

        foreach (var item in Steps)
        {
            if (item is SequenceEndStep)
            {
                isInsideSequence = false;
            }

            <div id="@item.Id" draggable="@IsStepDragable(item)"
            @ondragstart="()=>OnStepDragStart(item)"
            @ondragend="()=>OnStepDragEnd()"
            @ondragenter="()=>OnStepDragEnter(item)"
            @ondragover="(x)=>OnStepDragOver(x, item)"
            @ondragleave="()=>OnStepDragLeave()"
            @ondrop="()=>OnDropStepOnSpacing()"
            @onclick="()=>OnStepClick(item)"
            @ondblclick="()=>OnStepDoubleClick(item)"
            @ondblclick:stopPropagation="true"
            @onmousedown="()=>OnStepMouseDown(item)"
            @onmousedown:stopPropagation="true"
            class="@GetClassesForDraggable(item)
            @CheckIfDragOperationIsInProgess()
            @CheckIfDraggable(item)
            @CheckSequenceClass(item, isInsideSequence)">

                @ChildContent(item)

            </div>

            <div 
            @ondrop="()=>OnDropStepOnSpacing()"
            @ondrop:stopPropagation
            @ondragleave="()=>OnDragLeaveSpacing(item)"
            @ondragenter="()=>OnDragEnterSpacing(item)"
            class="@GetStepSpacerClass(item)">
            </div>

            if (item is SequenceStep)
            {
                isInsideSequence = true;
            }
        }
    }

</div>

<style>

    .dropzone {
        overflow: auto;
        height: calc(100vh - 115px);
    }

    .step-active-spacing {
        height: 15px;
        min-height: 15px;
        background-color: deepskyblue;
    }

    .step-spacing {
        height: 15px;
        min-height: 15px;
    }

    .sequence-item {
        margin-left: 20px;
    }

</style>